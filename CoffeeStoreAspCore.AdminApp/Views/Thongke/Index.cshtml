@model IEnumerable<CoffeeStoreAspCore.ViewModels.Catalog.RevenueReportViewModel>

@{
   
    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.Date).ToList());
    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.Revenue).ToList());
    ViewData["Title"] = "Bar Chart";

    ViewData["Title"] = "Thongke";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="container-fluid">
    <div class="row">
        <div class="col-xl-9">
        </div>
        <div class="col-xl-3 mt-4 mb-4">
            <div class="filter">
                <div id="reportrange" class="text-center" style="width:280px;border-radius:10px; background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc">
                    <i class="glyphicon glyphicon-calendar fa fa-calendar"> </i>
                    <span>  @ViewBag.fromDate  ---- <i class="glyphicon glyphicon-calendar fa fa-calendar"> </i>  @ViewBag.toDate</span> <b class="caret"></b>

                </div>

            </div>
            <div class="clearfix"></div>
        </div>
    </div>
  
   

<div class="row">
   
        <div class="col-xs-4" style="margin-left:30px">
            <canvas id="bar-chart-horizontal" width="1500" height="700"></canvas>
        </div>
      
    </div>
</div>



<script>
  
    var countries = document.getElementById("bar-chart-horizontal").getContext('2d');
        Chart.defaults.global.defaultFontFamily = 'Arial';
    Chart.defaults.global.defaultFontSize = 16;
    Chart.defaults.global.defaultFontColor = '#000000';
var myPieChart = new Chart(countries, {
    type: 'horizontalBar',
    data: {
        labels: @Html.Raw(XLabels),
        datasets: [{
            label: "Revenue",
           backgroundColor: [
              "#F7464A",
              "#46BFBD",
              "#FDB45C",
              "#949FB1",
               "#4D5360",
               "#FAEBD7",
          "#DCDCDC",
          "#E9967A",
          "#F5DEB3",
               "#9ACD32",
            "#E9DAC6",
          "#CBCBCB",
          "#D88569",
          "#E4CDA2",
               "#89BC21",
         'rgba(255, 99, 132, 0.2)',  
                 'rgba(54, 162, 235, 0.2)', 
                          "#FDB45C",
              "#949FB1",
               "#4D5360",
               "#FAEBD7",
          "#DCDCDC",
                        'rgba(255, 206, 86, 0.2)',  
                        'rgba(75, 192, 192, 0.2)',  
                        'rgba(153, 102, 255, 0.2)',  
                        'rgba(255, 159, 64, 0.2)',  
                        'rgba(255, 0, 0)',  
                        'rgba(0, 255, 0)',  
                        'rgba(0, 0, 255)',  
                        'rgba(192, 192, 192)',  
                        'rgba(255, 255, 0)',  
                 'rgba(255, 0, 255)',
                         "#F7464A",
              "#46BFBD",
            
          "#E9967A",
          "#F5DEB3",
               "#9ACD32",
            "#E9DAC6",
          "#CBCBCB",
          "#D88569",
          "#E4CDA2",
          "#89BC21",
            ],
            data:@Html.Raw(YValues)  ,
        }],
    },
    options: {
         
         onClick: arletBox,
        responsive: true,
        legend: {
            display: false
        },
        
        animation: {
            animateScale: true,
            animateRotate: false
        },

    }
});
      function arletBox(event, array) {
        var firstPoint = myPieChart.getElementAtEvent(event)[0];
 
          var value = myPieChart.data.labels[firstPoint._index];
          var todate = value;
          
        var url = '@Url.Action("Index", "ProductReport")';
       

          window.location.href = url + '?fromdate=' + todate + '&todate=' + todate;
    }
</script>
<script>

         

     
       $('#reportrange').daterangepicker(optionSet1, cb);
   //  $('#reportrange span').html(moment().subtract(29, 'days').format('YYYY/MM/DD') + ' - ' + moment().format('YYYY/MM/DD'));
       var cb = function (start, end, label) {
            console.log(start.toISOString(), end.toISOString(), label);

       };
     var optionSet1 = {
            startDate: moment().subtract(29, 'days'),
            endDate: moment(),
            minDate: '01/01/2012',
            maxDate: moment().format('DD/MM/YYYY'),
            dateLimit: {
                days: 60
            },
            showDropdowns: true,
            showWeekNumbers: true,
            timePicker: false,
            timePickerIncrement: 1,
            timePicker12Hour: true,

            opens: 'left',
            buttonClasses: ['btn btn-default'],
            applyClass: 'btn-small btn-primary',
            cancelClass: 'btn-small',
            format: 'DD/MM/YYYY',
            separator: ' to ',
            locale: {
                applyLabel: 'Submit',
                cancelLabel: 'Clear',
                fromLabel: 'From',
                toLabel: 'To',
                customRangeLabel: 'Custom',
                daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
                monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                firstDay: 1
            }
        };

       $('#reportrange').on('cancel.daterangepicker', function (ev, picker) {
            console.log("cancel event fired");
        });
    $('#reportrange').on('apply.daterangepicker', function (ev, picker) {

        var todate = picker.endDate.format('YYYY-MM-DD');
        var fromdate = picker.startDate.format('YYYY-MM-DD');
        var url = '@Url.Action("Index", "Thongke")';


        window.location.href = url + '?fromdate=' + fromdate + '&todate=' + todate;
     });
      $('#reportrange"]').on('cancel.daterangepicker', function(ev, picker) {
     $('#reportrange span').html('');
  });
             $('#reportrange').on('show.daterangepicker', function () {
            console.log("show event fired");
        });
        $('#reportrange').on('hide.daterangepicker', function () {
            console.log("hide event fired");
        });


</script>
